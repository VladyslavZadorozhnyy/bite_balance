// Generated by view binder compiler. Do not edit!
package com.ui.components.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.ui.basic.buttons.icon_button.IconButton;
import com.ui.basic.buttons.text_button.TextButton;
import com.ui.basic.buttons.text_icon_button.TextIconButton;
import com.ui.basic.checkbox.Checkbox;
import com.ui.basic.input_form.InputForm;
import com.ui.basic.nav_bar.NavigationBar;
import com.ui.basic.recycler_views.dish_recycler.DishRecycler;
import com.ui.basic.recycler_views.goal_recycler.GoalRecycler;
import com.ui.basic.recycler_views.meal_recycler.MealRecycler;
import com.ui.basic.recycler_views.metric_recycler.MetricRecycler;
import com.ui.basic.texts.slideable_text.SlideableText;
import com.ui.basic.texts.text.Text;
import com.ui.components.R;
import com.ui.components.graph.component.Graph;
import com.ui.components.progress.carousel.ProgressCarousel;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDemonstrationBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Graph chart;

  @NonNull
  public final MaterialButton chartButton;

  @NonNull
  public final Checkbox checkboxComponent;

  @NonNull
  public final Text checkboxText;

  @NonNull
  public final MaterialButton confirmDialogButton;

  @NonNull
  public final DishRecycler dishRecycler;

  @NonNull
  public final TextIconButton getInputValue;

  @NonNull
  public final GoalRecycler goalRecycler;

  @NonNull
  public final IconButton iconButtonSample;

  @NonNull
  public final MaterialButton inputDialogButton;

  @NonNull
  public final InputForm inputForm;

  @NonNull
  public final MealRecycler mealRecycler;

  @NonNull
  public final MetricRecycler metricRecycler;

  @NonNull
  public final NavigationBar navigationComponent;

  @NonNull
  public final ProgressCarousel progressCarousel;

  @NonNull
  public final SlideableText slideableTextSample;

  @NonNull
  public final TextButton textButtonSample;

  @NonNull
  public final TextIconButton textIconButtonSample;

  @NonNull
  public final Text textSample;

  @NonNull
  public final Text title;

  @NonNull
  public final MaterialButton yesNoDialogButton;

  private FragmentDemonstrationBinding(@NonNull FrameLayout rootView, @NonNull Graph chart,
      @NonNull MaterialButton chartButton, @NonNull Checkbox checkboxComponent,
      @NonNull Text checkboxText, @NonNull MaterialButton confirmDialogButton,
      @NonNull DishRecycler dishRecycler, @NonNull TextIconButton getInputValue,
      @NonNull GoalRecycler goalRecycler, @NonNull IconButton iconButtonSample,
      @NonNull MaterialButton inputDialogButton, @NonNull InputForm inputForm,
      @NonNull MealRecycler mealRecycler, @NonNull MetricRecycler metricRecycler,
      @NonNull NavigationBar navigationComponent, @NonNull ProgressCarousel progressCarousel,
      @NonNull SlideableText slideableTextSample, @NonNull TextButton textButtonSample,
      @NonNull TextIconButton textIconButtonSample, @NonNull Text textSample, @NonNull Text title,
      @NonNull MaterialButton yesNoDialogButton) {
    this.rootView = rootView;
    this.chart = chart;
    this.chartButton = chartButton;
    this.checkboxComponent = checkboxComponent;
    this.checkboxText = checkboxText;
    this.confirmDialogButton = confirmDialogButton;
    this.dishRecycler = dishRecycler;
    this.getInputValue = getInputValue;
    this.goalRecycler = goalRecycler;
    this.iconButtonSample = iconButtonSample;
    this.inputDialogButton = inputDialogButton;
    this.inputForm = inputForm;
    this.mealRecycler = mealRecycler;
    this.metricRecycler = metricRecycler;
    this.navigationComponent = navigationComponent;
    this.progressCarousel = progressCarousel;
    this.slideableTextSample = slideableTextSample;
    this.textButtonSample = textButtonSample;
    this.textIconButtonSample = textIconButtonSample;
    this.textSample = textSample;
    this.title = title;
    this.yesNoDialogButton = yesNoDialogButton;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDemonstrationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDemonstrationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_demonstration, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDemonstrationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chart;
      Graph chart = ViewBindings.findChildViewById(rootView, id);
      if (chart == null) {
        break missingId;
      }

      id = R.id.chart_button;
      MaterialButton chartButton = ViewBindings.findChildViewById(rootView, id);
      if (chartButton == null) {
        break missingId;
      }

      id = R.id.checkbox_component;
      Checkbox checkboxComponent = ViewBindings.findChildViewById(rootView, id);
      if (checkboxComponent == null) {
        break missingId;
      }

      id = R.id.checkbox_text;
      Text checkboxText = ViewBindings.findChildViewById(rootView, id);
      if (checkboxText == null) {
        break missingId;
      }

      id = R.id.confirm_dialog_button;
      MaterialButton confirmDialogButton = ViewBindings.findChildViewById(rootView, id);
      if (confirmDialogButton == null) {
        break missingId;
      }

      id = R.id.dish_recycler;
      DishRecycler dishRecycler = ViewBindings.findChildViewById(rootView, id);
      if (dishRecycler == null) {
        break missingId;
      }

      id = R.id.get_input_value;
      TextIconButton getInputValue = ViewBindings.findChildViewById(rootView, id);
      if (getInputValue == null) {
        break missingId;
      }

      id = R.id.goal_recycler;
      GoalRecycler goalRecycler = ViewBindings.findChildViewById(rootView, id);
      if (goalRecycler == null) {
        break missingId;
      }

      id = R.id.icon_button_sample;
      IconButton iconButtonSample = ViewBindings.findChildViewById(rootView, id);
      if (iconButtonSample == null) {
        break missingId;
      }

      id = R.id.input_dialog_button;
      MaterialButton inputDialogButton = ViewBindings.findChildViewById(rootView, id);
      if (inputDialogButton == null) {
        break missingId;
      }

      id = R.id.input_form;
      InputForm inputForm = ViewBindings.findChildViewById(rootView, id);
      if (inputForm == null) {
        break missingId;
      }

      id = R.id.meal_recycler;
      MealRecycler mealRecycler = ViewBindings.findChildViewById(rootView, id);
      if (mealRecycler == null) {
        break missingId;
      }

      id = R.id.metric_recycler;
      MetricRecycler metricRecycler = ViewBindings.findChildViewById(rootView, id);
      if (metricRecycler == null) {
        break missingId;
      }

      id = R.id.navigation_component;
      NavigationBar navigationComponent = ViewBindings.findChildViewById(rootView, id);
      if (navigationComponent == null) {
        break missingId;
      }

      id = R.id.progress_carousel;
      ProgressCarousel progressCarousel = ViewBindings.findChildViewById(rootView, id);
      if (progressCarousel == null) {
        break missingId;
      }

      id = R.id.slideable_text_sample;
      SlideableText slideableTextSample = ViewBindings.findChildViewById(rootView, id);
      if (slideableTextSample == null) {
        break missingId;
      }

      id = R.id.text_button_sample;
      TextButton textButtonSample = ViewBindings.findChildViewById(rootView, id);
      if (textButtonSample == null) {
        break missingId;
      }

      id = R.id.text_icon_button_sample;
      TextIconButton textIconButtonSample = ViewBindings.findChildViewById(rootView, id);
      if (textIconButtonSample == null) {
        break missingId;
      }

      id = R.id.text_sample;
      Text textSample = ViewBindings.findChildViewById(rootView, id);
      if (textSample == null) {
        break missingId;
      }

      id = R.id.title;
      Text title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.yes_no_dialog_button;
      MaterialButton yesNoDialogButton = ViewBindings.findChildViewById(rootView, id);
      if (yesNoDialogButton == null) {
        break missingId;
      }

      return new FragmentDemonstrationBinding((FrameLayout) rootView, chart, chartButton,
          checkboxComponent, checkboxText, confirmDialogButton, dishRecycler, getInputValue,
          goalRecycler, iconButtonSample, inputDialogButton, inputForm, mealRecycler,
          metricRecycler, navigationComponent, progressCarousel, slideableTextSample,
          textButtonSample, textIconButtonSample, textSample, title, yesNoDialogButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
